// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AlbumsColumns holds the columns for the "albums" table.
	AlbumsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "url", Type: field.TypeString},
		{Name: "caption", Type: field.TypeString, Nullable: true},
		{Name: "display_order", Type: field.TypeInt, Default: 0},
	}
	// AlbumsTable holds the schema information for the "albums" table.
	AlbumsTable = &schema.Table{
		Name:       "albums",
		Columns:    AlbumsColumns,
		PrimaryKey: []*schema.Column{AlbumsColumns[0]},
	}
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
		{Name: "image", Type: field.TypeString},
		{Name: "icon", Type: field.TypeString},
		{Name: "color", Type: field.TypeString},
		{Name: "short_name", Type: field.TypeString, Unique: true},
		{Name: "display_order", Type: field.TypeInt, Default: 0},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:       "departments",
		Columns:    DepartmentsColumns,
		PrimaryKey: []*schema.Column{DepartmentsColumns[0]},
	}
	// DigikalaCodesColumns holds the columns for the "digikala_codes" table.
	DigikalaCodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "used", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "assign_at", Type: field.TypeTime, Nullable: true},
		{Name: "assign_to_user_id", Type: field.TypeInt, Nullable: true},
	}
	// DigikalaCodesTable holds the schema information for the "digikala_codes" table.
	DigikalaCodesTable = &schema.Table{
		Name:       "digikala_codes",
		Columns:    DigikalaCodesColumns,
		PrimaryKey: []*schema.Column{DigikalaCodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "digikala_codes_users_digikala_codes",
				Columns:    []*schema.Column{DigikalaCodesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// HrTeamsColumns holds the columns for the "hr_teams" table.
	HrTeamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "full_name", Type: field.TypeString},
		{Name: "role", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "display_order", Type: field.TypeInt, Default: 0},
	}
	// HrTeamsTable holds the schema information for the "hr_teams" table.
	HrTeamsTable = &schema.Table{
		Name:       "hr_teams",
		Columns:    HrTeamsColumns,
		PrimaryKey: []*schema.Column{HrTeamsColumns[0]},
	}
	// OtPsColumns holds the columns for the "ot_ps" table.
	OtPsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "used", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "used_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_otps", Type: field.TypeInt},
	}
	// OtPsTable holds the schema information for the "ot_ps" table.
	OtPsTable = &schema.Table{
		Name:       "ot_ps",
		Columns:    OtPsColumns,
		PrimaryKey: []*schema.Column{OtPsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ot_ps_users_otps",
				Columns:    []*schema.Column{OtPsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RequestsColumns holds the columns for the "requests" table.
	RequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "full_name", Type: field.TypeString},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"employment", "payroll_stamped", "salary_deduction", "introduction_letter", "good_conduct_letter", "confirmation_letter", "embassy_letter", "development_learning", "marriage_gift", "childbirth_gift", "travel_credit", "supplementary_insurance"}},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "doing", "done", "rejected"}, Default: "pending"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// RequestsTable holds the schema information for the "requests" table.
	RequestsTable = &schema.Table{
		Name:       "requests",
		Columns:    RequestsColumns,
		PrimaryKey: []*schema.Column{RequestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "requests_users_requests",
				Columns:    []*schema.Column{RequestsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RequestMetaColumns holds the columns for the "request_meta" table.
	RequestMetaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "request_id", Type: field.TypeInt},
	}
	// RequestMetaTable holds the schema information for the "request_meta" table.
	RequestMetaTable = &schema.Table{
		Name:       "request_meta",
		Columns:    RequestMetaColumns,
		PrimaryKey: []*schema.Column{RequestMetaColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "request_meta_requests_meta",
				Columns:    []*schema.Column{RequestMetaColumns[3]},
				RefColumns: []*schema.Column{RequestsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ResumesColumns holds the columns for the "resumes" table.
	ResumesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "introduced_name", Type: field.TypeString, Size: 100},
		{Name: "introduced_phone", Type: field.TypeString, Size: 20},
		{Name: "position", Type: field.TypeString, Size: 100},
		{Name: "file", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "reviewed", "accepted", "rejected"}, Default: "pending"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// ResumesTable holds the schema information for the "resumes" table.
	ResumesTable = &schema.Table{
		Name:       "resumes",
		Columns:    ResumesColumns,
		PrimaryKey: []*schema.Column{ResumesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resumes_users_resumes",
				Columns:    []*schema.Column{ResumesColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "phone", Type: field.TypeString},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "full_name", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"admin", "employee"}, Default: "employee"},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "personnel_number", Type: field.TypeString, Unique: true},
		{Name: "national_code", Type: field.TypeString, Unique: true},
		{Name: "birthdate", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "cooperation_start_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "confirmed", Type: field.TypeBool, Default: false},
		{Name: "department_users", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_departments_users",
				Columns:    []*schema.Column{UsersColumns[14]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AlbumsTable,
		DepartmentsTable,
		DigikalaCodesTable,
		HrTeamsTable,
		OtPsTable,
		RequestsTable,
		RequestMetaTable,
		ResumesTable,
		UsersTable,
	}
)

func init() {
	DigikalaCodesTable.ForeignKeys[0].RefTable = UsersTable
	OtPsTable.ForeignKeys[0].RefTable = UsersTable
	RequestsTable.ForeignKeys[0].RefTable = UsersTable
	RequestMetaTable.ForeignKeys[0].RefTable = RequestsTable
	ResumesTable.ForeignKeys[0].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = DepartmentsTable
}

// Code generated by ent, DO NOT EDIT.

package album

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the album type in the database.
	Label = "album"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldCaption holds the string denoting the caption field in the database.
	FieldCaption = "caption"
	// FieldDisplayOrder holds the string denoting the display_order field in the database.
	FieldDisplayOrder = "display_order"
	// Table holds the table name of the album in the database.
	Table = "albums"
)

// Columns holds all SQL columns for album fields.
var Columns = []string{
	FieldID,
	FieldURL,
	FieldCaption,
	FieldDisplayOrder,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// URLValidator is a validator for the "url" field. It is called by the builders before save.
	URLValidator func(string) error
	// DefaultDisplayOrder holds the default value on creation for the "display_order" field.
	DefaultDisplayOrder int
)

// OrderOption defines the ordering options for the Album queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByURL orders the results by the url field.
func ByURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldURL, opts...).ToFunc()
}

// ByCaption orders the results by the caption field.
func ByCaption(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCaption, opts...).ToFunc()
}

// ByDisplayOrder orders the results by the display_order field.
func ByDisplayOrder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDisplayOrder, opts...).ToFunc()
}

// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/espitman/jbm-hr-backend/ent/album"
	"github.com/espitman/jbm-hr-backend/ent/alibabacode"
	"github.com/espitman/jbm-hr-backend/ent/department"
	"github.com/espitman/jbm-hr-backend/ent/digikalacode"
	"github.com/espitman/jbm-hr-backend/ent/hrteam"
	"github.com/espitman/jbm-hr-backend/ent/otp"
	"github.com/espitman/jbm-hr-backend/ent/request"
	"github.com/espitman/jbm-hr-backend/ent/requestmeta"
	"github.com/espitman/jbm-hr-backend/ent/resume"
	"github.com/espitman/jbm-hr-backend/ent/schema"
	"github.com/espitman/jbm-hr-backend/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	albumFields := schema.Album{}.Fields()
	_ = albumFields
	// albumDescURL is the schema descriptor for url field.
	albumDescURL := albumFields[0].Descriptor()
	// album.URLValidator is a validator for the "url" field. It is called by the builders before save.
	album.URLValidator = albumDescURL.Validators[0].(func(string) error)
	// albumDescDisplayOrder is the schema descriptor for display_order field.
	albumDescDisplayOrder := albumFields[2].Descriptor()
	// album.DefaultDisplayOrder holds the default value on creation for the display_order field.
	album.DefaultDisplayOrder = albumDescDisplayOrder.Default.(int)
	alibabacodeFields := schema.AlibabaCode{}.Fields()
	_ = alibabacodeFields
	// alibabacodeDescCode is the schema descriptor for code field.
	alibabacodeDescCode := alibabacodeFields[0].Descriptor()
	// alibabacode.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	alibabacode.CodeValidator = alibabacodeDescCode.Validators[0].(func(string) error)
	// alibabacodeDescUsed is the schema descriptor for used field.
	alibabacodeDescUsed := alibabacodeFields[1].Descriptor()
	// alibabacode.DefaultUsed holds the default value on creation for the used field.
	alibabacode.DefaultUsed = alibabacodeDescUsed.Default.(bool)
	// alibabacodeDescCreatedAt is the schema descriptor for created_at field.
	alibabacodeDescCreatedAt := alibabacodeFields[2].Descriptor()
	// alibabacode.DefaultCreatedAt holds the default value on creation for the created_at field.
	alibabacode.DefaultCreatedAt = alibabacodeDescCreatedAt.Default.(func() time.Time)
	departmentFields := schema.Department{}.Fields()
	_ = departmentFields
	// departmentDescTitle is the schema descriptor for title field.
	departmentDescTitle := departmentFields[0].Descriptor()
	// department.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	department.TitleValidator = departmentDescTitle.Validators[0].(func(string) error)
	// departmentDescDescription is the schema descriptor for description field.
	departmentDescDescription := departmentFields[1].Descriptor()
	// department.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	department.DescriptionValidator = departmentDescDescription.Validators[0].(func(string) error)
	// departmentDescImage is the schema descriptor for image field.
	departmentDescImage := departmentFields[2].Descriptor()
	// department.ImageValidator is a validator for the "image" field. It is called by the builders before save.
	department.ImageValidator = departmentDescImage.Validators[0].(func(string) error)
	// departmentDescIcon is the schema descriptor for icon field.
	departmentDescIcon := departmentFields[3].Descriptor()
	// department.IconValidator is a validator for the "icon" field. It is called by the builders before save.
	department.IconValidator = departmentDescIcon.Validators[0].(func(string) error)
	// departmentDescColor is the schema descriptor for color field.
	departmentDescColor := departmentFields[4].Descriptor()
	// department.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	department.ColorValidator = departmentDescColor.Validators[0].(func(string) error)
	// departmentDescShortName is the schema descriptor for shortName field.
	departmentDescShortName := departmentFields[5].Descriptor()
	// department.ShortNameValidator is a validator for the "shortName" field. It is called by the builders before save.
	department.ShortNameValidator = departmentDescShortName.Validators[0].(func(string) error)
	// departmentDescDisplayOrder is the schema descriptor for display_order field.
	departmentDescDisplayOrder := departmentFields[6].Descriptor()
	// department.DefaultDisplayOrder holds the default value on creation for the display_order field.
	department.DefaultDisplayOrder = departmentDescDisplayOrder.Default.(int)
	digikalacodeFields := schema.DigikalaCode{}.Fields()
	_ = digikalacodeFields
	// digikalacodeDescCode is the schema descriptor for code field.
	digikalacodeDescCode := digikalacodeFields[0].Descriptor()
	// digikalacode.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	digikalacode.CodeValidator = digikalacodeDescCode.Validators[0].(func(string) error)
	// digikalacodeDescUsed is the schema descriptor for used field.
	digikalacodeDescUsed := digikalacodeFields[1].Descriptor()
	// digikalacode.DefaultUsed holds the default value on creation for the used field.
	digikalacode.DefaultUsed = digikalacodeDescUsed.Default.(bool)
	hrteamFields := schema.HRTeam{}.Fields()
	_ = hrteamFields
	// hrteamDescFullName is the schema descriptor for full_name field.
	hrteamDescFullName := hrteamFields[0].Descriptor()
	// hrteam.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	hrteam.FullNameValidator = hrteamDescFullName.Validators[0].(func(string) error)
	// hrteamDescRole is the schema descriptor for role field.
	hrteamDescRole := hrteamFields[1].Descriptor()
	// hrteam.RoleValidator is a validator for the "role" field. It is called by the builders before save.
	hrteam.RoleValidator = hrteamDescRole.Validators[0].(func(string) error)
	// hrteamDescEmail is the schema descriptor for email field.
	hrteamDescEmail := hrteamFields[2].Descriptor()
	// hrteam.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	hrteam.EmailValidator = hrteamDescEmail.Validators[0].(func(string) error)
	// hrteamDescPhone is the schema descriptor for phone field.
	hrteamDescPhone := hrteamFields[3].Descriptor()
	// hrteam.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	hrteam.PhoneValidator = hrteamDescPhone.Validators[0].(func(string) error)
	// hrteamDescDisplayOrder is the schema descriptor for display_order field.
	hrteamDescDisplayOrder := hrteamFields[4].Descriptor()
	// hrteam.DefaultDisplayOrder holds the default value on creation for the display_order field.
	hrteam.DefaultDisplayOrder = hrteamDescDisplayOrder.Default.(int)
	otpFields := schema.OTP{}.Fields()
	_ = otpFields
	// otpDescCode is the schema descriptor for code field.
	otpDescCode := otpFields[0].Descriptor()
	// otp.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	otp.CodeValidator = otpDescCode.Validators[0].(func(string) error)
	// otpDescExpiresAt is the schema descriptor for expires_at field.
	otpDescExpiresAt := otpFields[1].Descriptor()
	// otp.DefaultExpiresAt holds the default value on creation for the expires_at field.
	otp.DefaultExpiresAt = otpDescExpiresAt.Default.(func() time.Time)
	// otp.UpdateDefaultExpiresAt holds the default value on update for the expires_at field.
	otp.UpdateDefaultExpiresAt = otpDescExpiresAt.UpdateDefault.(func() time.Time)
	// otpDescUsed is the schema descriptor for used field.
	otpDescUsed := otpFields[2].Descriptor()
	// otp.DefaultUsed holds the default value on creation for the used field.
	otp.DefaultUsed = otpDescUsed.Default.(bool)
	// otpDescCreatedAt is the schema descriptor for created_at field.
	otpDescCreatedAt := otpFields[3].Descriptor()
	// otp.DefaultCreatedAt holds the default value on creation for the created_at field.
	otp.DefaultCreatedAt = otpDescCreatedAt.Default.(func() time.Time)
	requestFields := schema.Request{}.Fields()
	_ = requestFields
	// requestDescFullName is the schema descriptor for full_name field.
	requestDescFullName := requestFields[1].Descriptor()
	// request.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	request.FullNameValidator = requestDescFullName.Validators[0].(func(string) error)
	// requestDescCreatedAt is the schema descriptor for created_at field.
	requestDescCreatedAt := requestFields[5].Descriptor()
	// request.DefaultCreatedAt holds the default value on creation for the created_at field.
	request.DefaultCreatedAt = requestDescCreatedAt.Default.(func() time.Time)
	// requestDescUpdatedAt is the schema descriptor for updated_at field.
	requestDescUpdatedAt := requestFields[6].Descriptor()
	// request.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	request.DefaultUpdatedAt = requestDescUpdatedAt.Default.(func() time.Time)
	// request.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	request.UpdateDefaultUpdatedAt = requestDescUpdatedAt.UpdateDefault.(func() time.Time)
	requestmetaFields := schema.RequestMeta{}.Fields()
	_ = requestmetaFields
	// requestmetaDescKey is the schema descriptor for key field.
	requestmetaDescKey := requestmetaFields[1].Descriptor()
	// requestmeta.KeyValidator is a validator for the "key" field. It is called by the builders before save.
	requestmeta.KeyValidator = requestmetaDescKey.Validators[0].(func(string) error)
	// requestmetaDescValue is the schema descriptor for value field.
	requestmetaDescValue := requestmetaFields[2].Descriptor()
	// requestmeta.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	requestmeta.ValueValidator = requestmetaDescValue.Validators[0].(func(string) error)
	resumeFields := schema.Resume{}.Fields()
	_ = resumeFields
	// resumeDescIntroducedName is the schema descriptor for introduced_name field.
	resumeDescIntroducedName := resumeFields[0].Descriptor()
	// resume.IntroducedNameValidator is a validator for the "introduced_name" field. It is called by the builders before save.
	resume.IntroducedNameValidator = func() func(string) error {
		validators := resumeDescIntroducedName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(introduced_name string) error {
			for _, fn := range fns {
				if err := fn(introduced_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// resumeDescIntroducedPhone is the schema descriptor for introduced_phone field.
	resumeDescIntroducedPhone := resumeFields[1].Descriptor()
	// resume.IntroducedPhoneValidator is a validator for the "introduced_phone" field. It is called by the builders before save.
	resume.IntroducedPhoneValidator = func() func(string) error {
		validators := resumeDescIntroducedPhone.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(introduced_phone string) error {
			for _, fn := range fns {
				if err := fn(introduced_phone); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// resumeDescPosition is the schema descriptor for position field.
	resumeDescPosition := resumeFields[2].Descriptor()
	// resume.PositionValidator is a validator for the "position" field. It is called by the builders before save.
	resume.PositionValidator = func() func(string) error {
		validators := resumeDescPosition.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(position string) error {
			for _, fn := range fns {
				if err := fn(position); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// resumeDescFile is the schema descriptor for file field.
	resumeDescFile := resumeFields[3].Descriptor()
	// resume.FileValidator is a validator for the "file" field. It is called by the builders before save.
	resume.FileValidator = resumeDescFile.Validators[0].(func(string) error)
	// resumeDescCreatedAt is the schema descriptor for created_at field.
	resumeDescCreatedAt := resumeFields[5].Descriptor()
	// resume.DefaultCreatedAt holds the default value on creation for the created_at field.
	resume.DefaultCreatedAt = resumeDescCreatedAt.Default.(func() time.Time)
	// resumeDescUpdatedAt is the schema descriptor for updated_at field.
	resumeDescUpdatedAt := resumeFields[6].Descriptor()
	// resume.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	resume.DefaultUpdatedAt = resumeDescUpdatedAt.Default.(func() time.Time)
	// resume.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	resume.UpdateDefaultUpdatedAt = resumeDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPhone is the schema descriptor for phone field.
	userDescPhone := userFields[1].Descriptor()
	// user.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	user.PhoneValidator = userDescPhone.Validators[0].(func(string) error)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[2].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = userDescFirstName.Validators[0].(func(string) error)
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[3].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = userDescLastName.Validators[0].(func(string) error)
	// userDescFullName is the schema descriptor for full_name field.
	userDescFullName := userFields[4].Descriptor()
	// user.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	user.FullNameValidator = userDescFullName.Validators[0].(func(string) error)
	// userDescPersonnelNumber is the schema descriptor for personnel_number field.
	userDescPersonnelNumber := userFields[8].Descriptor()
	// user.PersonnelNumberValidator is a validator for the "personnel_number" field. It is called by the builders before save.
	user.PersonnelNumberValidator = userDescPersonnelNumber.Validators[0].(func(string) error)
	// userDescNationalCode is the schema descriptor for national_code field.
	userDescNationalCode := userFields[9].Descriptor()
	// user.NationalCodeValidator is a validator for the "national_code" field. It is called by the builders before save.
	user.NationalCodeValidator = userDescNationalCode.Validators[0].(func(string) error)
	// userDescConfirmed is the schema descriptor for confirmed field.
	userDescConfirmed := userFields[12].Descriptor()
	// user.DefaultConfirmed holds the default value on creation for the confirmed field.
	user.DefaultConfirmed = userDescConfirmed.Default.(bool)
	// userDescActive is the schema descriptor for active field.
	userDescActive := userFields[13].Descriptor()
	// user.DefaultActive holds the default value on creation for the active field.
	user.DefaultActive = userDescActive.Default.(bool)
}
